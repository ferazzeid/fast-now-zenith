{"version":3,"file":"BrandAssetsManager-C1fya-Yq.js","sources":["../../src/components/BrandAssetsManager.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { supabase } from \"@/integrations/supabase/client\";\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { Upload, Image as ImageIcon, Smartphone, Monitor, Palette, User } from \"lucide-react\";\r\nimport { SmartLoadingButton } from \"./enhanced/SmartLoadingStates\";\r\nimport { AuthorTooltip } from \"./AuthorTooltip\";\r\nimport { deleteImageFromStorage } from \"@/utils/imageUtils\";\r\n\r\nconst BrandAssetsManager = () => {\r\n  const [appIcon, setAppIcon] = useState<File | null>(null);\r\n  const [favicon, setFavicon] = useState<File | null>(null);\r\n  const [logo, setLogo] = useState<File | null>(null);\r\n  const [currentAppIcon, setCurrentAppIcon] = useState<string>('');\r\n  const [currentFavicon, setCurrentFavicon] = useState<string>('');\r\n  const [currentLogo, setCurrentLogo] = useState<string>('');\r\n  const [uploading, setUploading] = useState(false);\r\n  const { toast } = useToast();\r\n  \r\n  // Author tooltip state\r\n  const [authorData, setAuthorData] = useState({\r\n    image: '/src/assets/motivator-placeholder.jpg',\r\n    name: 'Admin',\r\n    title: 'Personal Insight'\r\n  });\r\n  const [authorDataDraft, setAuthorDataDraft] = useState({\r\n    name: 'Admin',\r\n    title: 'Personal Insight'\r\n  });\r\n  const [hasAuthorChanges, setHasAuthorChanges] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchCurrentAssets();\r\n    loadAuthorSettings();\r\n  }, []);\r\n\r\n  const fetchCurrentAssets = async () => {\r\n    try {\r\n      const { data: settingsData, error } = await supabase\r\n        .from('shared_settings')\r\n        .select('setting_key, setting_value')\r\n        .in('setting_key', ['app_logo', 'app_favicon', 'app_icon_url']);\r\n\r\n      if (error) {\r\n        console.error('Error fetching brand assets:', error);\r\n        return;\r\n      }\r\n\r\n      if (settingsData) {\r\n        settingsData.forEach(setting => {\r\n          if (setting.setting_key === 'app_favicon') {\r\n            setCurrentFavicon(setting.setting_value || '');\r\n          } else if (setting.setting_key === 'app_logo') {\r\n            setCurrentLogo(setting.setting_value || '');\r\n          } else if (setting.setting_key === 'app_icon_url') {\r\n            setCurrentAppIcon(setting.setting_value || '');\r\n          }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching current assets:', error);\r\n    }\r\n  };\r\n\r\n  const loadAuthorSettings = async () => {\r\n    try {\r\n      const { data: settings } = await supabase\r\n        .from('shared_settings')\r\n        .select('setting_key, setting_value')\r\n        .in('setting_key', ['author_tooltip_image', 'author_tooltip_name', 'author_tooltip_title']);\r\n\r\n      if (settings) {\r\n        const settingsMap = settings.reduce((acc, setting) => {\r\n          acc[setting.setting_key] = setting.setting_value;\r\n          return acc;\r\n        }, {} as Record<string, string>);\r\n\r\n        setAuthorData({\r\n          image: settingsMap.author_tooltip_image || '/src/assets/motivator-placeholder.jpg',\r\n          name: settingsMap.author_tooltip_name || 'Admin',\r\n          title: settingsMap.author_tooltip_title || 'Personal Insight'\r\n        });\r\n        setAuthorDataDraft({\r\n          name: settingsMap.author_tooltip_name || 'Admin',\r\n          title: settingsMap.author_tooltip_title || 'Personal Insight'\r\n        });\r\n        setHasAuthorChanges(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load author settings:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = (file: File, type: 'appIcon' | 'favicon' | 'logo') => {\r\n    // Validate file type\r\n    if (!file.type.startsWith('image/')) {\r\n      toast({\r\n        title: \"Invalid file type\",\r\n        description: \"Please select a valid image file (PNG, JPG, etc.)\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Validate file size (max 2MB)\r\n    if (file.size > 2 * 1024 * 1024) {\r\n      toast({\r\n        title: \"File too large\",\r\n        description: \"Please select an image smaller than 2MB\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (type === 'appIcon') {\r\n      setAppIcon(file);\r\n    } else if (type === 'favicon') {\r\n      setFavicon(file);\r\n    } else {\r\n      setLogo(file);\r\n    }\r\n  };\r\n\r\n  const uploadAsset = async (file: File, type: 'appIcon' | 'favicon' | 'logo') => {\r\n    // Delete old asset first (non-blocking)\r\n    let oldImageUrl = '';\r\n    if (type === 'appIcon') oldImageUrl = currentAppIcon;\r\n    else if (type === 'favicon') oldImageUrl = currentFavicon;\r\n    else oldImageUrl = currentLogo;\r\n    \r\n    if (oldImageUrl) {\r\n      const deleteResult = await deleteImageFromStorage(oldImageUrl, 'website-images', supabase);\r\n      if (!deleteResult.success) {\r\n        console.warn(`Failed to delete old ${type} (continuing with upload):`, deleteResult.error);\r\n      }\r\n    }\r\n    \r\n    const fileExt = file.name.split('.').pop();\r\n    const fileName = `${type}-${Date.now()}.${fileExt}`;\r\n    const filePath = `brand-assets/${fileName}`;\r\n\r\n    console.log(`Uploading ${type}:`, { fileName, filePath, fileSize: file.size, fileType: file.type });\r\n\r\n    const { data: uploadData, error: uploadError } = await supabase.storage\r\n      .from('website-images')\r\n      .upload(filePath, file, {\r\n        cacheControl: '3600',\r\n        upsert: false\r\n      });\r\n\r\n    if (uploadError) {\r\n      console.error(`Upload error for ${type}:`, uploadError);\r\n      throw new Error(`Upload failed: ${uploadError.message}`);\r\n    }\r\n\r\n    console.log(`Upload successful for ${type}:`, uploadData);\r\n\r\n    const { data } = supabase.storage\r\n      .from('website-images')\r\n      .getPublicUrl(filePath);\r\n\r\n    console.log(`Public URL generated for ${type}:`, data.publicUrl);\r\n    return data.publicUrl;\r\n  };\r\n\r\n  const handleAuthorImageSelect = async (file: File) => {\r\n    if (!file.type.startsWith('image/')) {\r\n      toast({\r\n        title: \"Invalid file type\",\r\n        description: \"Please select an image file.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      toast({\r\n        title: \"File too large\",\r\n        description: \"Please select an image under 5MB.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n    try {\r\n      // Delete old author image first (non-blocking)\r\n      if (authorData.image && authorData.image !== '/src/assets/motivator-placeholder.jpg') {\r\n        const deleteResult = await deleteImageFromStorage(authorData.image, 'website-images', supabase);\r\n        if (!deleteResult.success) {\r\n          console.warn('Failed to delete old author image (continuing with upload):', deleteResult.error);\r\n        }\r\n      }\r\n      \r\n      const fileExt = file.name.split('.').pop();\r\n      const fileName = `author-${Math.random()}.${fileExt}`;\r\n      const filePath = `author/${fileName}`;\r\n\r\n      const { error: uploadError } = await supabase.storage\r\n        .from('website-images')\r\n        .upload(filePath, file);\r\n\r\n      if (uploadError) throw uploadError;\r\n\r\n      const { data: { publicUrl } } = supabase.storage\r\n        .from('website-images')\r\n        .getPublicUrl(filePath);\r\n\r\n      await supabase\r\n        .from('shared_settings')\r\n        .upsert({ \r\n          setting_key: 'author_tooltip_image', \r\n          setting_value: publicUrl \r\n        }, { onConflict: 'setting_key' });\r\n\r\n      setAuthorData(prev => ({ ...prev, image: publicUrl }));\r\n      \r\n      toast({\r\n        title: \"Author image updated\",\r\n        description: \"The author tooltip image has been updated successfully.\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Error uploading author image:', error);\r\n      toast({\r\n        title: \"Upload failed\",\r\n        description: \"Failed to upload the author image. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const updateAuthorField = async (field: 'name' | 'title', value: string) => {\r\n    setUploading(true);\r\n    try {\r\n      await supabase\r\n        .from('shared_settings')\r\n        .upsert({ \r\n          setting_key: `author_tooltip_${field}`, \r\n          setting_value: value \r\n        }, { onConflict: 'setting_key' });\r\n\r\n      setAuthorData(prev => ({ ...prev, [field]: value }));\r\n      setHasAuthorChanges(false);\r\n      \r\n      toast({\r\n        title: \"Author info updated\",\r\n        description: `Author ${field} has been updated successfully.`,\r\n      });\r\n    } catch (error) {\r\n      console.error(`Error updating author ${field}:`, error);\r\n      toast({\r\n        title: \"Update failed\",\r\n        description: `Failed to update author ${field}. Please try again.`,\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const saveAuthorInfo = async () => {\r\n    if (!hasAuthorChanges) return;\r\n    \r\n    setUploading(true);\r\n    try {\r\n      // Save both name and title\r\n      await Promise.all([\r\n        supabase\r\n          .from('shared_settings')\r\n          .upsert({ \r\n            setting_key: 'author_tooltip_name', \r\n            setting_value: authorDataDraft.name \r\n          }, { onConflict: 'setting_key' }),\r\n        supabase\r\n          .from('shared_settings')\r\n          .upsert({ \r\n            setting_key: 'author_tooltip_title', \r\n            setting_value: authorDataDraft.title \r\n          }, { onConflict: 'setting_key' })\r\n      ]);\r\n\r\n      setAuthorData(prev => ({ \r\n        ...prev, \r\n        name: authorDataDraft.name,\r\n        title: authorDataDraft.title \r\n      }));\r\n      setHasAuthorChanges(false);\r\n      \r\n      toast({\r\n        title: \"Author info saved\",\r\n        description: \"Author information has been updated successfully.\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving author info:', error);\r\n      toast({\r\n        title: \"Save failed\",\r\n        description: \"Failed to save author information. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleAuthorDataChange = (field: 'name' | 'title', value: string) => {\r\n    setAuthorDataDraft(prev => ({ ...prev, [field]: value }));\r\n    setHasAuthorChanges(true);\r\n  };\r\n\r\n  const updateManifestAndFavicon = async () => {\r\n    // Force manifest cache refresh by triggering service worker update\r\n    if ('serviceWorker' in navigator) {\r\n      try {\r\n        const registration = await navigator.serviceWorker.ready;\r\n        if (registration) {\r\n          registration.update();\r\n        }\r\n      } catch (error) {\r\n        console.log('Service worker update failed (non-critical):', error);\r\n      }\r\n    }\r\n\r\n    // Force browser to refresh manifest by adding cache-busting parameter\r\n    const manifestLink = document.querySelector('link[rel=\"manifest\"]') as HTMLLinkElement;\r\n    if (manifestLink) {\r\n      const url = new URL(manifestLink.href);\r\n      url.searchParams.set('v', Date.now().toString());\r\n      manifestLink.href = url.toString();\r\n    }\r\n\r\n    console.log('Manifest and PWA cache updated');\r\n  };\r\n\r\n  const saveAsset = async (file: File, type: 'appIcon' | 'favicon' | 'logo') => {\r\n    if (!file) {\r\n      toast({\r\n        title: \"No file selected\",\r\n        description: `Please select a ${type} image first`,\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n    try {\r\n      console.log(`Starting ${type} upload:`, file.name);\r\n      const assetUrl = await uploadAsset(file, type);\r\n      console.log(`${type} uploaded successfully:`, assetUrl);\r\n      \r\n      // Determine the database key\r\n      let dbKey = '';\r\n      if (type === 'appIcon') dbKey = 'app_icon_url';\r\n      else if (type === 'favicon') dbKey = 'app_favicon';\r\n      else dbKey = 'app_logo';\r\n      \r\n      // Save to database with conflict resolution\r\n      const { data: existing } = await supabase\r\n        .from('shared_settings')\r\n        .select('setting_key')\r\n        .eq('setting_key', dbKey)\r\n        .maybeSingle();\r\n\r\n      let error;\r\n      if (existing) {\r\n        // Update existing record\r\n        const { error: updateError } = await supabase\r\n          .from('shared_settings')\r\n          .update({ setting_value: assetUrl, updated_at: new Date().toISOString() })\r\n          .eq('setting_key', dbKey);\r\n        error = updateError;\r\n      } else {\r\n        // Insert new record\r\n        const { error: insertError } = await supabase\r\n          .from('shared_settings')\r\n          .insert({\r\n            setting_key: dbKey,\r\n            setting_value: assetUrl,\r\n          });\r\n        error = insertError;\r\n      }\r\n\r\n      if (error) {\r\n        console.error('Database update error:', error);\r\n        throw new Error(`Failed to save ${type} URL: ${error.message}`);\r\n      }\r\n\r\n      // Update local state\r\n      if (type === 'appIcon') {\r\n        setCurrentAppIcon(assetUrl);\r\n        setAppIcon(null);\r\n      } else if (type === 'favicon') {\r\n        setCurrentFavicon(assetUrl);\r\n        setFavicon(null);\r\n      } else {\r\n        setCurrentLogo(assetUrl);\r\n        setLogo(null);\r\n      }\r\n      \r\n      await updateManifestAndFavicon();\r\n\r\n      const messages = {\r\n        appIcon: \"App icon updated successfully! This will be used for PWA installation and home screen icons.\",\r\n        favicon: \"Favicon uploaded successfully! The new favicon will appear on browser tabs.\",\r\n        logo: \"Logo updated successfully! This will be used for app branding and headers.\"\r\n      };\r\n\r\n      toast({\r\n        title: \"Success\",\r\n        description: messages[type],\r\n      });\r\n      \r\n      // Refresh current assets to show updated asset\r\n      await fetchCurrentAssets();\r\n    } catch (error: any) {\r\n      console.error(`Error uploading ${type}:`, error);\r\n      toast({\r\n        title: \"Upload Failed\",\r\n        description: error?.message || `Failed to upload ${type}. Please try again.`,\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* App Icon Upload */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-base font-medium flex items-center gap-2\">\r\n            <Smartphone className=\"w-4 h-4\" />\r\n            App Icon · 192x192/512x512\r\n          </CardTitle>\r\n          <p className=\"text-sm text-muted-foreground\">Main app icon for home screen and app stores (used for PWA)</p>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          {currentAppIcon && (\r\n            <div className=\"flex items-center gap-3 p-3 border rounded-lg bg-background\">\r\n              <img \r\n                src={currentAppIcon} \r\n                alt=\"Current app icon\" \r\n                className=\"w-12 h-12 object-contain rounded\"\r\n                style={{ backgroundColor: 'transparent' }}\r\n              />\r\n              <span className=\"text-sm text-muted-foreground\">Current app icon</span>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"app-icon-upload\" className=\"text-sm font-medium\">\r\n              Select App Icon (PNG with transparent background recommended)\r\n            </Label>\r\n            <div className=\"flex items-center gap-3\">\r\n              <input\r\n                id=\"app-icon-upload\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={(e) => e.target.files?.[0] && handleFileSelect(e.target.files[0], 'appIcon')}\r\n                className=\"hidden\"\r\n              />\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={() => document.getElementById('app-icon-upload')?.click()}\r\n                className=\"flex items-center gap-2\"\r\n              >\r\n                <Upload className=\"h-4 w-4\" />\r\n                Choose File\r\n              </Button>\r\n              {appIcon && (\r\n                <span className=\"text-sm text-muted-foreground\">\r\n                  {appIcon.name}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex gap-2\">\r\n            <Button \r\n              onClick={() => saveAsset(appIcon!, 'appIcon')} \r\n              disabled={!appIcon || uploading}\r\n              className=\"flex-1 sm:flex-none\"\r\n            >\r\n              {uploading ? \"Uploading...\" : \"Save\"}\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Favicon Upload */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-base font-medium flex items-center gap-2\">\r\n            <Monitor className=\"w-4 h-4\" />\r\n            Favicon · 32x32\r\n          </CardTitle>\r\n          <p className=\"text-sm text-muted-foreground\">Small icon shown in browser tabs and bookmarks</p>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          {currentFavicon && (\r\n            <div className=\"flex items-center gap-3 p-3 border rounded-lg bg-background\">\r\n              <img \r\n                src={currentFavicon} \r\n                alt=\"Current favicon\" \r\n                className=\"w-8 h-8 object-contain\"\r\n                style={{ backgroundColor: 'transparent' }}\r\n              />\r\n              <span className=\"text-sm text-muted-foreground\">Current favicon</span>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"favicon-upload\" className=\"text-sm font-medium\">\r\n              Select Favicon (PNG with transparent background recommended)\r\n            </Label>\r\n            <div className=\"flex items-center gap-3\">\r\n              <input\r\n                id=\"favicon-upload\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={(e) => e.target.files?.[0] && handleFileSelect(e.target.files[0], 'favicon')}\r\n                className=\"hidden\"\r\n              />\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={() => document.getElementById('favicon-upload')?.click()}\r\n                className=\"flex items-center gap-2\"\r\n              >\r\n                <Upload className=\"h-4 w-4\" />\r\n                Choose File\r\n              </Button>\r\n              {favicon && (\r\n                <span className=\"text-sm text-muted-foreground\">\r\n                  {favicon.name}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex gap-2\">\r\n            <Button \r\n              onClick={() => saveAsset(favicon!, 'favicon')} \r\n              disabled={!favicon || uploading}\r\n              className=\"flex-1 sm:flex-none\"\r\n            >\r\n              {uploading ? \"Uploading...\" : \"Save\"}\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Logo Upload */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-base font-medium flex items-center gap-2\">\r\n            <Palette className=\"w-4 h-4\" />\r\n            Logo · Variable Size\r\n          </CardTitle>\r\n          <p className=\"text-sm text-muted-foreground\">Main brand logo for headers, splash screens, and general branding</p>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          {currentLogo && (\r\n            <div className=\"flex items-center gap-3 p-3 border rounded-lg bg-background\">\r\n              <img \r\n                src={currentLogo} \r\n                alt=\"Current logo\" \r\n                className=\"w-12 h-12 object-contain rounded\"\r\n                style={{ backgroundColor: 'transparent' }}\r\n              />\r\n              <span className=\"text-sm text-muted-foreground\">Current logo</span>\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"logo-upload\" className=\"text-sm font-medium\">\r\n              Select Logo (PNG with transparent background recommended)\r\n            </Label>\r\n            <div className=\"flex items-center gap-3\">\r\n              <input\r\n                id=\"logo-upload\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={(e) => e.target.files?.[0] && handleFileSelect(e.target.files[0], 'logo')}\r\n                className=\"hidden\"\r\n              />\r\n              <Button\r\n                variant=\"outline\"\r\n                onClick={() => document.getElementById('logo-upload')?.click()}\r\n                className=\"flex items-center gap-2\"\r\n              >\r\n                <Upload className=\"h-4 w-4\" />\r\n                Choose File\r\n              </Button>\r\n              {logo && (\r\n                <span className=\"text-sm text-muted-foreground\">\r\n                  {logo.name}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex gap-2\">\r\n            <Button \r\n              onClick={() => saveAsset(logo!, 'logo')} \r\n              disabled={!logo || uploading}\r\n              className=\"flex-1 sm:flex-none\"\r\n            >\r\n              {uploading ? \"Uploading...\" : \"Save\"}\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Author Profile Section */}\r\n      <Card className=\"mt-6\">\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center space-x-2\">\r\n            <User className=\"w-5 h-5\" />\r\n            <span>Author Profile</span>\r\n            <AuthorTooltip content=\"This configures the author information shown in tooltips throughout the app where you can leave personal insights for users.\" />\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-6\">\r\n          {/* Author Image Upload */}\r\n          <div className=\"space-y-3\">\r\n            <Label>Author Image</Label>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"relative\">\r\n                <img\r\n                  src={authorData.image}\r\n                  alt=\"Author\"\r\n                  className=\"w-16 h-16 rounded-full object-cover border-2 border-border\"\r\n                />\r\n              </div>\r\n              <div className=\"flex-1\">\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={(e) => {\r\n                    const file = e.target.files?.[0];\r\n                    if (file) handleAuthorImageSelect(file);\r\n                  }}\r\n                  className=\"hidden\"\r\n                  id=\"author-image-upload\"\r\n                  disabled={uploading}\r\n                />\r\n                <label\r\n                  htmlFor=\"author-image-upload\"\r\n                  className={`flex items-center space-x-2 px-4 py-2 border border-dashed border-border rounded-lg cursor-pointer hover:bg-accent transition-colors ${uploading ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                >\r\n                  <Upload className=\"w-4 h-4\" />\r\n                  <span className=\"text-sm\">Upload author image</span>\r\n                </label>\r\n                <p className=\"text-xs text-muted-foreground mt-1\">\r\n                  Recommended: Square image, max 5MB\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Author Name */}\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"author-name\">Author Name</Label>\r\n            <Input\r\n              id=\"author-name\"\r\n              value={authorDataDraft.name}\r\n              onChange={(e) => handleAuthorDataChange('name', e.target.value)}\r\n              placeholder=\"Enter author name\"\r\n              disabled={uploading}\r\n            />\r\n          </div>\r\n\r\n          {/* Author Title */}\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"author-title\">Tooltip Title</Label>\r\n            <Input\r\n              id=\"author-title\"\r\n              value={authorDataDraft.title}\r\n              onChange={(e) => handleAuthorDataChange('title', e.target.value)}\r\n              placeholder=\"e.g., Personal Insight, Author Note\"\r\n              disabled={uploading}\r\n            />\r\n          </div>\r\n\r\n          {/* Save Button */}\r\n          <div className=\"flex gap-2\">\r\n            <Button \r\n              onClick={saveAuthorInfo}\r\n              disabled={!hasAuthorChanges || uploading}\r\n              className=\"flex-1 sm:flex-none\"\r\n            >\r\n              {uploading ? \"Saving...\" : \"Save Author Info\"}\r\n            </Button>\r\n            {hasAuthorChanges && (\r\n              <p className=\"text-xs text-muted-foreground self-center\">\r\n                You have unsaved changes\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Preview */}\r\n          <div className=\"space-y-2\">\r\n            <Label>Preview</Label>\r\n            <div className=\"flex items-center space-x-3 p-3 border border-border rounded-lg bg-muted/30\">\r\n              <AuthorTooltip content=\"This is how your tooltips will appear throughout the app. You can customize the image, name, and title above.\" />\r\n              <span className=\"text-sm text-muted-foreground\">\r\n                Hover or click the icon to see your tooltip\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrandAssetsManager;"],"names":["BrandAssetsManager","appIcon","setAppIcon","useState","favicon","setFavicon","logo","setLogo","currentAppIcon","setCurrentAppIcon","currentFavicon","setCurrentFavicon","currentLogo","setCurrentLogo","uploading","setUploading","toast","useToast","authorData","setAuthorData","authorDataDraft","setAuthorDataDraft","hasAuthorChanges","setHasAuthorChanges","useEffect","fetchCurrentAssets","loadAuthorSettings","settingsData","error","supabase","setting","settings","settingsMap","acc","handleFileSelect","file","type","uploadAsset","oldImageUrl","deleteResult","deleteImageFromStorage","fileExt","fileName","filePath","uploadData","uploadError","data","handleAuthorImageSelect","publicUrl","prev","saveAuthorInfo","handleAuthorDataChange","field","value","updateManifestAndFavicon","registration","manifestLink","url","saveAsset","assetUrl","dbKey","existing","updateError","insertError","jsxs","Card","CardHeader","CardTitle","jsx","Smartphone","CardContent","Label","e","Button","Upload","Monitor","Palette","User","AuthorTooltip","Input"],"mappings":"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"}