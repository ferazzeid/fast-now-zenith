{"version":3,"file":"AdminSEOSettings-BtcXM6KP.js","sources":["../../node_modules/lucide-react/dist/esm/icons/globe.js","../../src/components/AdminSEOSettings.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.526.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20\", key: \"13o1zl\" }],\n  [\"path\", { d: \"M2 12h20\", key: \"9i4pu4\" }]\n];\nconst Globe = createLucideIcon(\"globe\", __iconNode);\n\nexport { __iconNode, Globe as default };\n//# sourceMappingURL=globe.js.map\n","import { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Globe, Search } from 'lucide-react';\r\n\r\ninterface SEOSettings {\r\n  indexHomepage: boolean;\r\n  indexOtherPages: boolean;\r\n}\r\n\r\nexport const AdminSEOSettings = () => {\r\n  const [settings, setSettings] = useState<SEOSettings>({\r\n    indexHomepage: false,\r\n    indexOtherPages: false\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const { toast } = useToast();\r\n\r\n  useEffect(() => {\r\n    fetchSettings();\r\n  }, []);\r\n\r\n  const fetchSettings = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('shared_settings')\r\n        .select('setting_key, setting_value')\r\n        .in('setting_key', ['seo_index_homepage', 'seo_index_other_pages']);\r\n\r\n      if (error) throw error;\r\n\r\n      if (data) {\r\n        const settingsMap = data.reduce((acc, item) => {\r\n          acc[item.setting_key] = item.setting_value === 'true';\r\n          return acc;\r\n        }, {} as Record<string, boolean>);\r\n\r\n        setSettings({\r\n          indexHomepage: settingsMap.seo_index_homepage || false,\r\n          indexOtherPages: settingsMap.seo_index_other_pages || false\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch SEO settings:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to load SEO settings\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateSetting = async (key: string, value: boolean) => {\r\n    try {\r\n      // First try to get existing record\r\n      const { data: existing, error: fetchError } = await supabase\r\n        .from('shared_settings')\r\n        .select('id')\r\n        .eq('setting_key', key)\r\n        .maybeSingle();\r\n\r\n      if (fetchError && fetchError.code !== 'PGRST116') {\r\n        throw fetchError;\r\n      }\r\n\r\n      let error;\r\n      if (existing) {\r\n        // Update existing record\r\n        const { error: updateError } = await supabase\r\n          .from('shared_settings')\r\n          .update({ setting_value: value.toString() })\r\n          .eq('setting_key', key);\r\n        error = updateError;\r\n      } else {\r\n        // Insert new record\r\n        const { error: insertError } = await supabase\r\n          .from('shared_settings')\r\n          .insert({ \r\n            setting_key: key, \r\n            setting_value: value.toString() \r\n          });\r\n        error = insertError;\r\n      }\r\n\r\n      if (error) throw error;\r\n\r\n      toast({\r\n        title: \"Settings Updated\",\r\n        description: \"SEO indexing settings have been saved\"\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to update SEO setting:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to update SEO settings\",\r\n        variant: \"destructive\"\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleHomepageToggle = async (checked: boolean) => {\r\n    setSettings(prev => ({ ...prev, indexHomepage: checked }));\r\n    await updateSetting('seo_index_homepage', checked);\r\n  };\r\n\r\n  const handleOtherPagesToggle = async (checked: boolean) => {\r\n    setSettings(prev => ({ ...prev, indexOtherPages: checked }));\r\n    await updateSetting('seo_index_other_pages', checked);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Search className=\"h-5 w-5\" />\r\n            SEO Indexing Settings\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"animate-pulse space-y-4\">\r\n            <div className=\"h-4 bg-muted rounded w-3/4\"></div>\r\n            <div className=\"h-8 bg-muted rounded\"></div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"text-base font-medium flex items-center gap-2\">\r\n          <Search className=\"h-4 w-4\" />\r\n          SEO Indexing Settings\r\n        </CardTitle>\r\n        <CardDescription>\r\n          Control search engine indexing for different pages\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <Label htmlFor=\"homepage-indexing\" className=\"flex items-center gap-2\">\r\n            <Globe className=\"h-4 w-4\" /> Homepage Indexing\r\n          </Label>\r\n          <Switch id=\"homepage-indexing\" checked={settings.indexHomepage} onCheckedChange={handleHomepageToggle} />\r\n        </div>\r\n        <div className=\"flex items-center justify-between\">\r\n          <Label htmlFor=\"other-pages-indexing\" className=\"flex items-center gap-2\">\r\n            <Globe className=\"h-4 w-4\" /> Other Pages Indexing\r\n          </Label>\r\n          <Switch id=\"other-pages-indexing\" checked={settings.indexOtherPages} onCheckedChange={handleOtherPagesToggle} />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};"],"names":["__iconNode","Globe","createLucideIcon","AdminSEOSettings","settings","setSettings","useState","loading","setLoading","toast","useToast","useEffect","fetchSettings","data","error","supabase","settingsMap","acc","item","updateSetting","key","value","existing","fetchError","updateError","insertError","handleHomepageToggle","checked","prev","handleOtherPagesToggle","Card","jsx","CardHeader","jsxs","CardTitle","Search","CardContent","CardDescription","Label","Switch"],"mappings":"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","x_google_ignoreList":[0]}