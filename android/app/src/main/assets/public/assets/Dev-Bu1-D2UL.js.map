{"version":3,"file":"Dev-Bu1-D2UL.js","sources":["../../src/components/AdminAnimationSettings.tsx","../../src/components/PremiumAccessAuditReport.tsx","../../src/components/ui/alert.tsx","../../src/pages/admin/Dev.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Sparkles, Heart, Timer } from 'lucide-react';\r\nimport { useProfile } from '@/hooks/useProfile';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\nexport const AdminAnimationSettings = () => {\r\n  const { profile, updateProfile } = useProfile();\r\n  const { toast } = useToast();\r\n  \r\n  const [enableFastingSlideshow, setEnableFastingSlideshow] = useState(true);\r\n  const [enableWalkingSlideshow, setEnableWalkingSlideshow] = useState(true);\r\n  const [enableCeramicAnimations, setEnableCeramicAnimations] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (profile) {\r\n      setEnableFastingSlideshow(profile.enable_fasting_slideshow ?? true);\r\n      setEnableWalkingSlideshow(profile.enable_walking_slideshow ?? true);\r\n      setEnableCeramicAnimations(profile.enable_ceramic_animations ?? true);\r\n    }\r\n  }, [profile]);\r\n\r\n  const handleAnimationToggle = async (setting: string, value: boolean) => {\r\n    try {\r\n      const updates = { [setting]: value };\r\n      await updateProfile(updates);\r\n      \r\n      toast({\r\n        title: \"Animation Settings Updated\",\r\n        description: \"Your animation preferences have been saved.\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating animation settings:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to update animation settings. Please try again.\",\r\n        variant: \"destructive\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"bg-ceramic-plate border-ceramic-rim\">\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2 text-warm-text\">\r\n          <Sparkles className=\"w-5 h-5\" />\r\n          Animation Controls\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-6\">\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Heart className=\"w-4 h-4 text-primary\" />\r\n              <Label htmlFor=\"fasting-slideshow\" className=\"text-warm-text\">\r\n                Fasting Motivator Slideshow\r\n              </Label>\r\n            </div>\r\n            <Switch\r\n              id=\"fasting-slideshow\"\r\n              checked={enableFastingSlideshow}\r\n              onCheckedChange={(checked) => {\r\n                setEnableFastingSlideshow(checked);\r\n                handleAnimationToggle('enable_fasting_slideshow', checked);\r\n              }}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Heart className=\"w-4 h-4 text-primary\" />\r\n              <Label htmlFor=\"walking-slideshow\" className=\"text-warm-text\">\r\n                Walking Motivator Slideshow\r\n              </Label>\r\n            </div>\r\n            <Switch\r\n              id=\"walking-slideshow\"\r\n              checked={enableWalkingSlideshow}\r\n              onCheckedChange={(checked) => {\r\n                setEnableWalkingSlideshow(checked);\r\n                handleAnimationToggle('enable_walking_slideshow', checked);\r\n              }}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Timer className=\"w-4 h-4 text-primary\" />\r\n              <Label htmlFor=\"ceramic-animations\" className=\"text-warm-text\">\r\n                Hourly Ceramic Timer Animations\r\n              </Label>\r\n            </div>\r\n            <Switch\r\n              id=\"ceramic-animations\"\r\n              checked={enableCeramicAnimations}\r\n              onCheckedChange={(checked) => {\r\n                setEnableCeramicAnimations(checked);\r\n                handleAnimationToggle('enable_ceramic_animations', checked);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"text-xs text-muted-foreground\">\r\n          Control visual animations and effects throughout the app. Disabling animations can improve performance on slower devices.\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};","import React from 'react';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { CheckCircle, XCircle, AlertTriangle, Lock, Crown, Shield } from 'lucide-react';\r\nimport { useAccess } from '@/hooks/useAccess';\r\n\r\nexport const PremiumAccessAuditReport = () => {\r\n  const { isAdmin, access_level, hasPremiumFeatures, testRole, isTestingMode } = useAccess();\r\n  \r\n  if (!isAdmin) return null;\r\n\r\n  // Features that should be premium-gated\r\n  const premiumFeatures = [\r\n    {\r\n      name: 'Food Tracking Navigation',\r\n      component: 'Navigation.tsx',\r\n      status: 'implemented',\r\n      description: 'Food nav button locked for free users with role testing support'\r\n    },\r\n    {\r\n      name: 'Voice Input Button',\r\n      component: 'PremiumGatedVoiceButton.tsx',\r\n      status: 'implemented', \r\n      description: 'Voice transcription locked for free users'\r\n    },\r\n    {\r\n      name: 'Image Upload',\r\n      component: 'PremiumGatedImageUpload.tsx',\r\n      status: 'implemented',\r\n      description: 'Image upload and AI analysis locked for free users'\r\n    },\r\n    {\r\n      name: 'Deficit Analysis',\r\n      component: 'PremiumGatedDeficitAnalysis.tsx',\r\n      status: 'implemented',\r\n      description: 'AI-powered deficit analysis locked for free users'\r\n    },\r\n    {\r\n      name: 'Calories In Display',\r\n      component: 'PremiumGatedCaloriesIn.tsx',\r\n      status: 'implemented',\r\n      description: 'Food calorie tracking display locked for free users'\r\n    },\r\n    {\r\n      name: 'Deficit Display',\r\n      component: 'PremiumGatedDeficitDisplay.tsx',\r\n      status: 'implemented',\r\n      description: 'Small deficit display locked for free users'\r\n    },\r\n    {\r\n      name: 'Large Deficit Display',\r\n      component: 'PremiumGatedDeficitDisplayLarge.tsx',\r\n      status: 'implemented',\r\n      description: 'Large deficit card locked for free users'\r\n    },\r\n    {\r\n      name: 'Goal Metrics',\r\n      component: 'PremiumGatedGoalMetrics.tsx',\r\n      status: 'implemented',\r\n      description: 'Goal tracking metrics locked for free users'\r\n    }\r\n  ];\r\n\r\n  const getCurrentAccessStatus = () => {\r\n    if (isTestingMode) {\r\n      return {\r\n        level: testRole || 'unknown',\r\n        hasAccess: testRole === 'admin' || testRole === 'paid_user',\r\n        display: testRole === 'admin' ? 'Admin (Testing)' : \r\n                testRole === 'paid_user' ? 'Premium User (Testing)' : \r\n                'Free User (Testing)'\r\n      };\r\n    }\r\n    \r\n    return {\r\n      level: access_level,\r\n      hasAccess: hasPremiumFeatures,\r\n      display: access_level === 'admin' ? 'Admin' :\r\n               hasPremiumFeatures ? 'Premium User' :\r\n               'Free User'\r\n    };\r\n  };\r\n\r\n  const currentStatus = getCurrentAccessStatus();\r\n\r\n  return (\r\n    <Card className=\"p-6 bg-card border-border\">\r\n      <div className=\"space-y-4\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <Shield className=\"w-5 h-5 text-primary\" />\r\n          <h3 className=\"text-lg font-semibold\">Premium Access Audit Report</h3>\r\n        </div>\r\n        \r\n        {/* Current Testing Status */}\r\n        <div className=\"p-3 bg-muted/50 rounded-lg\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm font-medium\">Current View:</span>\r\n            <Badge variant={currentStatus.hasAccess ? \"default\" : \"secondary\"}>\r\n              {currentStatus.display}\r\n            </Badge>\r\n          </div>\r\n          {isTestingMode && (\r\n            <p className=\"text-xs text-muted-foreground mt-1\">\r\n              Role testing active - seeing perspective of {testRole}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Premium Features Status */}\r\n        <div className=\"space-y-3\">\r\n          <h4 className=\"text-sm font-medium\">Premium-Gated Features</h4>\r\n          <div className=\"space-y-2\">\r\n            {premiumFeatures.map((feature, index) => (\r\n              <div key={index} className=\"flex items-center justify-between p-2 bg-muted/30 rounded\">\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <CheckCircle className=\"w-4 h-4 text-green-500\" />\r\n                    <span className=\"text-sm font-medium\">{feature.name}</span>\r\n                  </div>\r\n                  <p className=\"text-xs text-muted-foreground ml-6\">{feature.description}</p>\r\n                </div>\r\n                <Badge variant=\"outline\" className=\"text-xs\">\r\n                  {feature.status}\r\n                </Badge>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Key Fixes Applied */}\r\n        <div className=\"space-y-3\">\r\n          <h4 className=\"text-sm font-medium\">Recent Fixes</h4>\r\n          <div className=\"space-y-1\">\r\n            <div className=\"flex items-center space-x-2 text-sm\">\r\n              <CheckCircle className=\"w-3 h-3 text-green-500\" />\r\n              <span>Admin dashboard access preserved during role testing</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2 text-sm\">\r\n              <CheckCircle className=\"w-3 h-3 text-green-500\" />\r\n              <span>Food navigation button properly locked for free users</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2 text-sm\">\r\n              <CheckCircle className=\"w-3 h-3 text-green-500\" />\r\n              <span>Role testing persistence with localStorage</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2 text-sm\">\r\n              <CheckCircle className=\"w-3 h-3 text-green-500\" />\r\n              <span>Consistent premium gating logic across components</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Usage Instructions */}\r\n        <div className=\"p-3 bg-blue-50 dark:bg-blue-950 rounded-lg\">\r\n          <h4 className=\"text-sm font-medium text-blue-800 dark:text-blue-200\">Testing Instructions</h4>\r\n          <div className=\"text-xs text-blue-600 dark:text-blue-300 mt-1 space-y-1\">\r\n            <p>• Use Role Testing above to switch between user perspectives</p>\r\n            <p>• Free User: Should see locked food nav, premium gates, upgrade prompts</p>\r\n            <p>• Premium User: Should see unlocked features, no upgrade prompts</p>\r\n            <p>• Admin: Full access + admin dashboard always visible</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};","import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst alertVariants = cva(\r\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-background text-foreground\",\r\n        destructive:\r\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\r\n>(({ className, variant, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    role=\"alert\"\r\n    className={cn(alertVariants({ variant }), className)}\r\n    {...props}\r\n  />\r\n))\r\nAlert.displayName = \"Alert\"\r\n\r\nconst AlertTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertTitle.displayName = \"AlertTitle\"\r\n\r\nconst AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDescription.displayName = \"AlertDescription\"\r\n\r\nexport { Alert, AlertTitle, AlertDescription }\r\n","import { AdminSubnav } from \"@/components/AdminSubnav\";\r\nimport { usePageSEO } from \"@/hooks/usePageSEO\";\r\nimport AdminProtectedRoute from \"@/components/AdminProtectedRoute\";\r\n\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { AdminRoleTester } from \"@/components/AdminRoleTester\";\r\nimport { AdminAnimationSettings } from \"@/components/AdminAnimationSettings\";\r\nimport { PremiumAccessAuditReport } from \"@/components/PremiumAccessAuditReport\";\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useConnectionStore } from \"@/stores/connectionStore\";\r\nimport { Info, Wifi, RefreshCw, Globe, WifiOff, Eye } from \"lucide-react\";\r\nimport { OfflineScreen } from \"@/components/OfflineScreen\";\r\nimport { useState } from \"react\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { useIsMobile } from \"@/hooks/use-mobile\";\r\n\r\nexport default function AdminDev() {\r\n  const { isOnline, lastChecked, isTestingConnection, testConnection } = useConnectionStore();\r\n  const { toast } = useToast();\r\n  const isMobile = useIsMobile();\r\n  const [offlineTestMode, setOfflineTestMode] = useState(false);\r\n  const [previewMode, setPreviewMode] = useState<'banner' | 'fullscreen' | 'error' | null>(null);\r\n  const [networkSpeed, setNetworkSpeed] = useState<'normal' | 'slow' | 'offline'>('normal');\r\n  \r\n  usePageSEO({\r\n    title: \"Admin Dev\",\r\n    description: \"Developer tools and role testing.\",\r\n    canonicalPath: \"/admin/dev\",\r\n  });\r\n\r\n  const handleTestConnection = async () => {\r\n    await testConnection();\r\n  };\r\n\r\n  const handleReloadApp = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleSlowNetwork = () => {\r\n    setNetworkSpeed('slow');\r\n    toast({\r\n      title: \"Slow Network Simulation\",\r\n      description: \"Network requests will be delayed to simulate poor connectivity\",\r\n    });\r\n    // Reset after 10 seconds\r\n    setTimeout(() => {\r\n      setNetworkSpeed('normal');\r\n      toast({\r\n        title: \"Network Restored\",\r\n        description: \"Network simulation returned to normal\",\r\n      });\r\n    }, 10000);\r\n  };\r\n\r\n  const handleRecoveryTest = () => {\r\n    toast({\r\n      title: \"Recovery Test Started\",\r\n      description: \"Simulating offline → online recovery flow\",\r\n    });\r\n    // Simulate recovery sequence\r\n    setTimeout(() => {\r\n      toast({\r\n        title: \"Recovery Complete\",\r\n        description: \"All pending data has been synced successfully\",\r\n      });\r\n    }, 3000);\r\n  };\r\n\r\n  const handleBlockingTest = () => {\r\n    toast({\r\n      title: \"Blocking Action Simulated\",\r\n      description: \"This action would be blocked when offline\",\r\n      variant: \"destructive\"\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AdminProtectedRoute>\r\n      <main className={`container mx-auto ${isMobile ? 'p-4' : 'p-6'} space-y-6 overflow-x-hidden bg-background min-h-[calc(100vh-80px)]`} role=\"main\">\r\n        <h1 className=\"sr-only\">Admin Dev</h1>\r\n        <AdminSubnav />\r\n\r\n        <section aria-label=\"Role Testing\" className=\"space-y-4\">\r\n          <h2 className=\"text-xl font-semibold\">Role Testing</h2>\r\n          \r\n          <Alert>\r\n            <Info className=\"h-4 w-4\" />\r\n            <AlertDescription>\r\n              Test how the app behaves for different user roles. Admin dashboard access remains available regardless of test role.\r\n            </AlertDescription>\r\n          </Alert>\r\n\r\n          <AdminRoleTester />\r\n        </section>\r\n\r\n        <section aria-label=\"Premium Access Audit\" className=\"space-y-4\">\r\n          <h2 className=\"text-xl font-semibold\">Premium Access Audit</h2>\r\n          <PremiumAccessAuditReport />\r\n        </section>\r\n\r\n        <section aria-label=\"Animation Settings\" className=\"space-y-4\">\r\n          <h2 className=\"text-xl font-semibold\">Animation Settings</h2>\r\n          <AdminAnimationSettings />\r\n        </section>\r\n\r\n\r\n\r\n      </main>\r\n    </AdminProtectedRoute>\r\n  );\r\n}\r\n"],"names":["AdminAnimationSettings","profile","updateProfile","useProfile","toast","useToast","enableFastingSlideshow","setEnableFastingSlideshow","useState","enableWalkingSlideshow","setEnableWalkingSlideshow","enableCeramicAnimations","setEnableCeramicAnimations","useEffect","handleAnimationToggle","setting","value","updates","error","jsxs","Card","jsx","CardHeader","CardTitle","Sparkles","CardContent","Heart","Label","Switch","checked","Timer","PremiumAccessAuditReport","isAdmin","access_level","hasPremiumFeatures","testRole","isTestingMode","useAccess","premiumFeatures","currentStatus","Shield","Badge","feature","index","CheckCircle","alertVariants","cva","Alert","React.forwardRef","className","variant","props","ref","cn","AlertTitle","AlertDescription","AdminDev","useConnectionStore","isMobile","useIsMobile","usePageSEO","AdminProtectedRoute","AdminSubnav","Info","AdminRoleTester"],"mappings":"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"}