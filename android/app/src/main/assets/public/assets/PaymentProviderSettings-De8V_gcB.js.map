{"version":3,"file":"PaymentProviderSettings-De8V_gcB.js","sources":["../../node_modules/lucide-react/dist/esm/icons/apple.js","../../src/components/PaymentProviderSettings.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.526.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M12 20.94c1.5 0 2.75 1.06 4 1.06 3 0 6-8 6-12.22A4.91 4.91 0 0 0 17 5c-2.22 0-4 1.44-5 2-1-.56-2.78-2-5-2a4.9 4.9 0 0 0-5 4.78C2 14 5 22 8 22c1.25 0 2.5-1.06 4-1.06Z\",\n      key: \"3s7exb\"\n    }\n  ],\n  [\"path\", { d: \"M10 2c1 .5 2 2 2 5\", key: \"fcco2y\" }]\n];\nconst Apple = createLucideIcon(\"apple\", __iconNode);\n\nexport { __iconNode, Apple as default };\n//# sourceMappingURL=apple.js.map\n","import { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { supabase } from '@/integrations/supabase/client';\r\nimport { Loader2, CreditCard, Smartphone, Apple } from 'lucide-react';\r\n\r\ninterface PaymentProvider {\r\n  provider: string;\r\n  config_data: any;\r\n  is_active: boolean;\r\n}\r\n\r\nexport const PaymentProviderSettings = () => {\r\n  const [providers, setProviders] = useState<PaymentProvider[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState<string | null>(null);\r\n  const { toast } = useToast();\r\n\r\n  useEffect(() => {\r\n    fetchProviders();\r\n  }, []);\r\n\r\n  const fetchProviders = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('payment_provider_configs')\r\n        .select('*')\r\n        .order('provider');\r\n\r\n      if (error) throw error;\r\n      setProviders(data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching providers:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to fetch payment provider settings\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProvider = async (provider: string, updates: Partial<PaymentProvider>) => {\r\n    try {\r\n      setSaving(provider);\r\n      \r\n      const { error } = await supabase\r\n        .from('payment_provider_configs')\r\n        .update(updates)\r\n        .eq('provider', provider);\r\n\r\n      if (error) throw error;\r\n\r\n      setProviders(prev => \r\n        prev.map(p => p.provider === provider ? { ...p, ...updates } : p)\r\n      );\r\n\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Payment provider settings updated\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Error updating provider:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to update payment provider settings\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setSaving(null);\r\n    }\r\n  };\r\n\r\n  const getProviderIcon = (provider: string) => {\r\n    switch (provider) {\r\n      case 'stripe':\r\n        return <CreditCard className=\"w-5 h-5\" />;\r\n      case 'google_play':\r\n        return <Smartphone className=\"w-5 h-5\" />;\r\n      case 'apple_app_store':\r\n        return <Apple className=\"w-5 h-5\" />;\r\n      default:\r\n        return <CreditCard className=\"w-5 h-5\" />;\r\n    }\r\n  };\r\n\r\n  const getProviderName = (provider: string) => {\r\n    switch (provider) {\r\n      case 'stripe':\r\n        return 'Stripe';\r\n      case 'google_play':\r\n        return 'Google Play Billing';\r\n      case 'apple_app_store':\r\n        return 'Apple App Store';\r\n      default:\r\n        return provider;\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Payment Provider Settings</CardTitle>\r\n          <CardDescription>\r\n            Configure payment providers for different platforms\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center justify-center p-8\">\r\n            <Loader2 className=\"w-6 h-6 animate-spin\" />\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n\r\n      {providers.map((provider) => (\r\n        <Card key={provider.provider}>\r\n          <CardHeader>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center gap-3\">\r\n                {getProviderIcon(provider.provider)}\r\n                <div>\r\n                  <CardTitle className=\"text-lg\">\r\n                    {getProviderName(provider.provider)}\r\n                  </CardTitle>\r\n                  <CardDescription>\r\n                    {provider.provider === 'stripe' && 'Web payments via Stripe'}\r\n                    {provider.provider === 'google_play' && 'Android in-app purchases'}\r\n                    {provider.provider === 'apple_app_store' && 'iOS in-app purchases'}\r\n                  </CardDescription>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Badge variant={provider.is_active ? 'outline' : 'secondary'}>\r\n                  {provider.is_active ? 'Active' : 'Inactive'}\r\n                </Badge>\r\n                <Switch\r\n                  checked={provider.is_active}\r\n                  onCheckedChange={(checked) => \r\n                    updateProvider(provider.provider, { is_active: checked })\r\n                  }\r\n                  disabled={saving === provider.provider}\r\n                />\r\n              </div>\r\n            </div>\r\n          </CardHeader>\r\n          \r\n          <CardContent className=\"space-y-4\">\r\n            {provider.provider === 'stripe' && (\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <Label>Stripe Configuration</Label>\r\n                  <p className=\"text-sm text-muted-foreground mb-2\">\r\n                    Stripe settings are configured via the main admin panel and Supabase secrets.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {provider.provider === 'google_play' && (\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <Label htmlFor=\"package_name\">Package Name</Label>\r\n                  <Input\r\n                    id=\"package_name\"\r\n                    value={provider.config_data.package_name || ''}\r\n                    onChange={(e) => {\r\n                      const newConfigData = {\r\n                        ...provider.config_data,\r\n                        package_name: e.target.value\r\n                      };\r\n                      updateProvider(provider.provider, { config_data: newConfigData });\r\n                    }}\r\n                    placeholder=\"com.yourapp.package\"\r\n                    disabled={saving === provider.provider}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"service_account_key\">Service Account Key (JSON)</Label>\r\n                  <Textarea\r\n                    id=\"service_account_key\"\r\n                    value={provider.config_data.service_account_key || ''}\r\n                    onChange={(e) => {\r\n                      const newConfigData = {\r\n                        ...provider.config_data,\r\n                        service_account_key: e.target.value\r\n                      };\r\n                      updateProvider(provider.provider, { config_data: newConfigData });\r\n                    }}\r\n                    placeholder=\"Paste your Google Cloud Service Account JSON key here\"\r\n                    rows={6}\r\n                    disabled={saving === provider.provider}\r\n                  />\r\n                  <p className=\"text-xs text-muted-foreground mt-1\">\r\n                    Download from Google Cloud Console → IAM & Admin → Service Accounts\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {provider.provider === 'apple_app_store' && (\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <Label htmlFor=\"bundle_id\">Bundle ID</Label>\r\n                  <Input\r\n                    id=\"bundle_id\"\r\n                    value={provider.config_data.bundle_id || ''}\r\n                    onChange={(e) => {\r\n                      const newConfigData = {\r\n                        ...provider.config_data,\r\n                        bundle_id: e.target.value\r\n                      };\r\n                      updateProvider(provider.provider, { config_data: newConfigData });\r\n                    }}\r\n                    placeholder=\"com.yourapp.bundle\"\r\n                    disabled={saving === provider.provider}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label htmlFor=\"shared_secret\">App Store Connect Shared Secret</Label>\r\n                  <Input\r\n                    id=\"shared_secret\"\r\n                    type=\"password\"\r\n                    value={provider.config_data.shared_secret || ''}\r\n                    onChange={(e) => {\r\n                      const newConfigData = {\r\n                        ...provider.config_data,\r\n                        shared_secret: e.target.value\r\n                      };\r\n                      updateProvider(provider.provider, { config_data: newConfigData });\r\n                    }}\r\n                    placeholder=\"Your App Store Connect shared secret\"\r\n                    disabled={saving === provider.provider}\r\n                  />\r\n                  <p className=\"text-xs text-muted-foreground mt-1\">\r\n                    Found in App Store Connect → My Apps → App → Features → In-App Purchases\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {saving === provider.provider && (\r\n              <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\r\n                <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                Saving changes...\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};"],"names":["__iconNode","Apple","createLucideIcon","PaymentProviderSettings","providers","setProviders","useState","loading","setLoading","saving","setSaving","toast","useToast","useEffect","fetchProviders","data","error","supabase","updateProvider","provider","updates","prev","p","getProviderIcon","jsx","CreditCard","Smartphone","getProviderName","Card","jsxs","CardHeader","CardTitle","CardDescription","CardContent","Loader2","Badge","Switch","checked","Label","Input","e","newConfigData","Textarea"],"mappings":"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","x_google_ignoreList":[0]}