{"version":3,"file":"AdminRoleTester-CQstVZBx.js","sources":["../../node_modules/lucide-react/dist/esm/icons/user-x.js","../../src/components/AdminRoleTester.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.526.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }],\n  [\"line\", { x1: \"17\", x2: \"22\", y1: \"8\", y2: \"13\", key: \"3nzzx3\" }],\n  [\"line\", { x1: \"22\", x2: \"17\", y1: \"8\", y2: \"13\", key: \"1swrse\" }]\n];\nconst UserX = createLucideIcon(\"user-x\", __iconNode);\n\nexport { __iconNode, UserX as default };\n//# sourceMappingURL=user-x.js.map\n","import React from 'react';\r\nimport { Card, CardContent } from '@/components/ui/card';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { useAccess } from '@/hooks/useAccess';\r\nimport { TestTube, RotateCcw, Crown, User, UserX } from 'lucide-react';\r\n\r\nexport type UserRole = 'admin' | 'paid_user' | 'free_user';\r\n\r\nconst roleIcons = {\r\n  admin: Crown,\r\n  paid_user: User,\r\n  free_user: UserX,\r\n};\r\n\r\nconst roleDescriptions = {\r\n  admin: 'Full admin access with unlimited features',\r\n  paid_user: 'Premium features and high request limits',\r\n  free_user: 'Basic access with limited features',\r\n};\r\n\r\nexport const AdminRoleTester = () => {\r\n  const { testRole, setTestRole, isTestingMode } = useAccess();\r\n\r\n  const handleRoleChange = (value: string) => {\r\n    if (value === 'none') {\r\n      setTestRole?.(null);\r\n    } else {\r\n      setTestRole?.(value as UserRole);\r\n    }\r\n  };\r\n\r\n  const resetToAdmin = () => {\r\n    setTestRole?.(null);\r\n  };\r\n\r\n  const currentRole = (testRole || 'admin') as keyof typeof roleIcons;\r\n  const IconComponent = roleIcons[currentRole];\r\n\r\n  return (\r\n    <Card className={`border-2 border-dashed ${isTestingMode ? 'border-yellow-500 bg-yellow-50/10' : 'border-primary/50'}`}>\r\n      <CardContent className=\"pt-6\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"flex items-center gap-2 min-w-0 flex-1\">\r\n            <IconComponent className={`w-5 h-5 flex-shrink-0 ${isTestingMode ? 'text-yellow-600' : 'text-primary'}`} />\r\n            <div className=\"min-w-0\">\r\n              <div className=\"font-medium truncate\">\r\n                Currently testing as: <span className={isTestingMode ? 'text-yellow-700 font-bold' : ''}>{currentRole}</span>\r\n              </div>\r\n              {isTestingMode && (\r\n                <Badge variant=\"destructive\" className=\"mt-1\">\r\n                  <TestTube className=\"w-3 h-3 mr-1\" />\r\n                  Testing Mode Active\r\n                </Badge>\r\n              )}\r\n              {!isTestingMode && (\r\n                <p className=\"text-xs text-muted-foreground mt-1\">\r\n                  Default admin view - select a role to test user perspectives\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex gap-2 flex-shrink-0\">\r\n            <Select value={testRole || 'none'} onValueChange={handleRoleChange}>\r\n              <SelectTrigger className={`w-[140px] ${isTestingMode ? 'border-yellow-500' : ''}`}>\r\n                <SelectValue placeholder=\"Select role\" />\r\n              </SelectTrigger>\r\n              <SelectContent className=\"bg-background border border-border shadow-lg z-50\">\r\n                <SelectItem value=\"none\">Admin (Default)</SelectItem>\r\n                <SelectItem value=\"paid_user\">Premium User</SelectItem>\r\n                <SelectItem value=\"free_user\">Free User</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n            \r\n            {isTestingMode && (\r\n              <Button \r\n                onClick={resetToAdmin} \r\n                variant=\"outline\" \r\n                size=\"sm\"\r\n                className=\"flex-shrink-0 border-yellow-500 text-yellow-700 hover:bg-yellow-50\"\r\n              >\r\n                <RotateCcw className=\"w-4 h-4 mr-1\" />\r\n                Reset\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        {isTestingMode && (\r\n          <div className=\"mt-4 p-3 bg-yellow-50 dark:bg-yellow-950 rounded-lg border border-yellow-200 dark:border-yellow-800\">\r\n            <p className=\"text-sm text-yellow-800 dark:text-yellow-200\">\r\n              <strong>Testing as {currentRole}:</strong> {roleDescriptions[currentRole]}\r\n            </p>\r\n            <p className=\"text-xs text-yellow-600 dark:text-yellow-400 mt-1\">\r\n              Navigate to any page to see how features appear for this user role. This setting persists until reset.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};"],"names":["__iconNode","UserX","createLucideIcon","roleIcons","Crown","User","roleDescriptions","AdminRoleTester","testRole","setTestRole","isTestingMode","useAccess","handleRoleChange","value","resetToAdmin","currentRole","IconComponent","jsx","Card","jsxs","CardContent","Badge","TestTube","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Button","RotateCcw"],"mappings":"qNAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GASA,MAAMA,EAAa,CACjB,CAAC,OAAQ,CAAE,EAAG,4CAA6C,IAAK,QAAQ,CAAE,EAC1E,CAAC,SAAU,CAAE,GAAI,IAAK,GAAI,IAAK,EAAG,IAAK,IAAK,QAAS,EACrD,CAAC,OAAQ,CAAE,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,IAAK,QAAQ,CAAE,EACjE,CAAC,OAAQ,CAAE,GAAI,KAAM,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,IAAK,QAAQ,CAAE,CACnE,EACMC,EAAQC,EAAiB,SAAUF,CAAU,ECL7CG,EAAY,CAChB,MAAOC,EACP,UAAWC,EACX,UAAWJ,CACb,EAEMK,EAAmB,CACvB,MAAO,4CACP,UAAW,2CACX,UAAW,oCACb,EAEaC,EAAkB,IAAM,CACnC,KAAM,CAAE,SAAAC,EAAU,YAAAC,EAAa,cAAAC,GAAkBC,EAAU,EAErDC,EAAoBC,GAAkB,CAExCJ,IADEI,IAAU,OACE,KAEAA,CAFI,CAGpB,EAGIC,EAAe,IAAM,CACzBL,IAAc,IAAI,CAAA,EAGdM,EAAeP,GAAY,QAC3BQ,EAAgBb,EAAUY,CAAW,EAGzC,OAAAE,EAAAA,IAACC,EAAK,CAAA,UAAW,0BAA0BR,EAAgB,oCAAsC,mBAAmB,GAClH,SAAAS,OAACC,EAAY,CAAA,UAAU,OACrB,SAAA,CAACD,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAF,MAACD,GAAc,UAAW,yBAAyBN,EAAgB,kBAAoB,cAAc,GAAI,EACzGS,EAAAA,KAAC,MAAI,CAAA,UAAU,UACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,uBAAuB,SAAA,CAAA,+BACb,OAAK,CAAA,UAAWT,EAAgB,4BAA8B,GAAK,SAAYK,EAAA,CAAA,EACxG,EACCL,GACES,EAAAA,KAAAE,EAAA,CAAM,QAAQ,cAAc,UAAU,OACrC,SAAA,CAACJ,EAAAA,IAAAK,EAAA,CAAS,UAAU,cAAe,CAAA,EAAE,qBAAA,EAEvC,EAED,CAACZ,GACAO,EAAA,IAAC,IAAE,CAAA,UAAU,qCAAqC,SAElD,+DAAA,CAAA,EAEJ,CAAA,EACF,EAEAE,EAAAA,KAAC,MAAI,CAAA,UAAU,2BACb,SAAA,CAAAA,OAACI,EAAO,CAAA,MAAOf,GAAY,OAAQ,cAAeI,EAChD,SAAA,CAACK,EAAA,IAAAO,EAAA,CAAc,UAAW,aAAad,EAAgB,oBAAsB,EAAE,GAC7E,SAACO,EAAAA,IAAAQ,EAAA,CAAY,YAAY,aAAc,CAAA,EACzC,EACAN,EAAAA,KAACO,EAAc,CAAA,UAAU,oDACvB,SAAA,CAACT,EAAA,IAAAU,EAAA,CAAW,MAAM,OAAO,SAAe,kBAAA,EACvCV,EAAA,IAAAU,EAAA,CAAW,MAAM,YAAY,SAAY,eAAA,EACzCV,EAAA,IAAAU,EAAA,CAAW,MAAM,YAAY,SAAS,YAAA,CAAA,EACzC,CAAA,EACF,EAECjB,GACCS,EAAA,KAACS,EAAA,CACC,QAASd,EACT,QAAQ,UACR,KAAK,KACL,UAAU,qEAEV,SAAA,CAACG,EAAAA,IAAAY,EAAA,CAAU,UAAU,cAAe,CAAA,EAAE,OAAA,CAAA,CAExC,CAAA,EAEJ,CAAA,EACF,EAECnB,GACCS,EAAA,KAAC,MAAI,CAAA,UAAU,sGACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,+CACX,SAAA,CAAAA,OAAC,SAAO,CAAA,SAAA,CAAA,cAAYJ,EAAY,GAAA,EAAC,EAAS,IAAET,EAAiBS,CAAW,CAAA,EAC1E,EACCE,EAAA,IAAA,IAAA,CAAE,UAAU,oDAAoD,SAEjE,yGAAA,CAAA,EACF,CAAA,CAEJ,CAAA,CACF,CAAA,CAEJ","x_google_ignoreList":[0]}