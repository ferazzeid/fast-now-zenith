{"version":3,"file":"UserRequestLimits-DZWQRQMI.js","sources":["../../src/components/UserRequestLimits.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { supabase } from \"@/integrations/supabase/client\";\r\nimport { SmartInlineLoading } from './enhanced/SmartLoadingStates';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\r\nimport { Info } from \"lucide-react\";\r\nimport { useAccess } from '@/hooks/useAccess';\r\n\r\nexport const UserRequestLimits: React.FC = () => {\r\n  const [paidUserLimit, setPaidUserLimit] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const { toast } = useToast();\r\n  const { isAdmin } = useAccess();\r\n\r\n  // Only show to admin users\r\n  if (!isAdmin) {\r\n    return null;\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadCurrentLimits();\r\n  }, []);\r\n\r\n  const loadCurrentLimits = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('shared_settings')\r\n        .select('setting_value')\r\n        .eq('setting_key', 'monthly_request_limit')\r\n        .maybeSingle();\r\n\r\n      if (error) {\r\n        console.error('Error loading request limits:', error);\r\n        setPaidUserLimit('1000');\r\n        return;\r\n      }\r\n\r\n      setPaidUserLimit(data?.setting_value || '1000');\r\n    } catch (error) {\r\n      console.error('Error loading request limits:', error);\r\n      setPaidUserLimit('1000');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const saveRequestLimits = async () => {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('shared_settings')\r\n        .upsert({\r\n          setting_key: 'monthly_request_limit',\r\n          setting_value: paidUserLimit\r\n        }, { onConflict: 'setting_key' });\r\n\r\n      if (error) {\r\n        console.error('Error saving request limit:', error);\r\n        throw error;\r\n      }\r\n\r\n      toast({\r\n        title: \"Success\",\r\n        description: \"Monthly request limit saved successfully\",\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving request limits:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: `Failed to save request limits: ${error.message}`,\r\n        variant: \"destructive\",\r\n      });\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-lg\">User Request Limits</CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"flex items-center justify-center py-8\">\r\n          <SmartInlineLoading text=\"Loading usage data\" />\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"text-base\">AI Request Limits</CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <TooltipProvider>\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"flex items-center gap-1\">\r\n                <Label htmlFor=\"paidUserLimit\" className=\"text-xs\">Monthly Limit</Label>\r\n                <Tooltip>\r\n                  <TooltipTrigger asChild>\r\n                    <Info className=\"w-3 h-3 text-muted-foreground\" />\r\n                  </TooltipTrigger>\r\n                  <TooltipContent>\r\n                    Monthly AI requests for paid users (free users get 0 requests)\r\n                  </TooltipContent>\r\n                </Tooltip>\r\n              </div>\r\n              <Input\r\n                id=\"paidUserLimit\"\r\n                type=\"number\"\r\n                value={paidUserLimit}\r\n                onChange={(e) => setPaidUserLimit(e.target.value)}\r\n                placeholder=\"1000\"\r\n                className=\"h-8 w-24 text-sm\"\r\n                aria-label=\"Monthly AI requests for paid users\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"ml-auto\">\r\n              <Button onClick={saveRequestLimits} size=\"sm\" className=\"h-9 px-4\">\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </TooltipProvider>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};"],"names":["UserRequestLimits","paidUserLimit","setPaidUserLimit","useState","loading","setLoading","toast","useToast","isAdmin","useAccess","useEffect","loadCurrentLimits","data","error","supabase","saveRequestLimits","Card","jsx","CardHeader","CardTitle","CardContent","SmartInlineLoading","TooltipProvider","jsxs","Label","Tooltip","TooltipTrigger","Info","TooltipContent","Input","e","Button"],"mappings":"8PAYO,MAAMA,EAA8B,IAAM,CAC/C,KAAM,CAACC,EAAeC,CAAgB,EAAIC,WAAS,EAAE,EAC/C,CAACC,EAASC,CAAU,EAAIF,WAAS,EAAI,EACrC,CAAE,MAAAG,GAAUC,IACZ,CAAE,QAAAC,GAAYC,IAGpB,GAAI,CAACD,EACI,OAAA,KAGTE,EAAAA,UAAU,IAAM,CACIC,GACpB,EAAG,CAAE,CAAA,EAEL,MAAMA,EAAoB,SAAY,CAChC,GAAA,CACF,KAAM,CAAE,KAAAC,EAAM,MAAAC,CAAA,EAAU,MAAMC,EAC3B,KAAK,iBAAiB,EACtB,OAAO,eAAe,EACtB,GAAG,cAAe,uBAAuB,EACzC,cAEH,GAAID,EAAO,CACD,QAAA,MAAM,gCAAiCA,CAAK,EACpDX,EAAiB,MAAM,EACvB,MACF,CAEiBA,EAAAU,GAAM,eAAiB,MAAM,QACvCC,EAAO,CACN,QAAA,MAAM,gCAAiCA,CAAK,EACpDX,EAAiB,MAAM,CAAA,QACvB,CACAG,EAAW,EAAK,CAClB,CAAA,EAGIU,EAAoB,SAAY,CAChC,GAAA,CACI,KAAA,CAAE,MAAAF,GAAU,MAAMC,EACrB,KAAK,iBAAiB,EACtB,OAAO,CACN,YAAa,wBACb,cAAeb,CAAA,EACd,CAAE,WAAY,aAAA,CAAe,EAElC,GAAIY,EACM,cAAA,MAAM,8BAA+BA,CAAK,EAC5CA,EAGFP,EAAA,CACJ,MAAO,UACP,YAAa,0CAAA,CACd,QACMO,EAAO,CACN,QAAA,MAAM,+BAAgCA,CAAK,EAC7CP,EAAA,CACJ,MAAO,QACP,YAAa,kCAAkCO,EAAM,OAAO,GAC5D,QAAS,aAAA,CACV,CACH,CAAA,EAGF,OAAIT,SAECY,EACC,CAAA,SAAA,CAAAC,EAAAA,IAACC,GACC,SAACD,EAAA,IAAAE,EAAA,CAAU,UAAU,UAAU,+BAAmB,CACpD,CAAA,EACAF,EAAAA,IAACG,GAAY,UAAU,wCACrB,eAACC,EAAmB,CAAA,KAAK,qBAAqB,CAChD,CAAA,CACF,CAAA,CAAA,SAKDL,EACC,CAAA,SAAA,CAAAC,EAAAA,IAACC,GACC,SAACD,EAAA,IAAAE,EAAA,CAAU,UAAU,YAAY,6BAAiB,CACpD,CAAA,QACCC,EACC,CAAA,SAAAH,EAAAA,IAACK,GACC,SAACC,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,0BACb,SAAA,CAAAN,MAACO,EAAM,CAAA,QAAQ,gBAAgB,UAAU,UAAU,SAAa,gBAAA,SAC/DC,EACC,CAAA,SAAA,CAAAR,EAAAA,IAACS,GAAe,QAAO,GACrB,eAACC,EAAK,CAAA,UAAU,gCAAgC,CAClD,CAAA,EACAV,EAAAA,IAACW,GAAe,SAEhB,gEAAA,CAAA,CAAA,EACF,CAAA,EACF,EACAX,EAAA,IAACY,EAAA,CACC,GAAG,gBACH,KAAK,SACL,MAAO5B,EACP,SAAW6B,GAAM5B,EAAiB4B,EAAE,OAAO,KAAK,EAChD,YAAY,OACZ,UAAU,mBACV,aAAW,oCAAA,CACb,CAAA,EACF,EAECb,EAAA,IAAA,MAAA,CAAI,UAAU,UACb,SAACA,EAAAA,IAAAc,EAAA,CAAO,QAAShB,EAAmB,KAAK,KAAK,UAAU,WAAW,eAEnE,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,EACF,CACF,CAAA,CAAA,CAEJ"}